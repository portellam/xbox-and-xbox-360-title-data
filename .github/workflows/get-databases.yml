name: Auto-Get remote databases

on:
  schedule:
    - cron: "0 0 * * 1"
  workflow_dispatch:

jobs:
  update-database:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          if [ -f get_consolemods_tables_requirements.txt ]; then
            pip install -r get_consolemods_table_requirements.txt
          fi

          if [ -f get_google_sheets_requirements.txt ]; then
            pip install -r get_google_sheets_requirements.txt
          fi

          if [ -f get_wikipedia_tables_requirements.txt ]; then
            pip install -r get_wikipedia_tables_requirements.txt
          fi

      - name: Get latest from consolemods.org
        run: python get_consolemods_table.py

      - name: Get latest from Google sheets
        run: python get_google_sheets.py

      - name: Get latest from Wikipedia
        run: python get_wikipedia_tables.py

      - name: Verify database diff
        id: check_changes
        run: |
          git add database/json/ database/csv/
          if git diff --staged --quiet; then
            echo "No changes detected"
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit on database diff
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          DATE=$(date -u +%Y-%m-%d)
          git commit -m "Auto-update database files $DATE"

      - name: Tag Commit with ISO Date
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          DATE=$(date -u +%Y-%m-%d)
          INDEX=1
          while git rev-parse "$DATE_$INDEX" >/dev/null 2>&1; do
            INDEX=$((INDEX + 1))
          done
          git tag "$DATE_$INDEX"
          git push origin "$DATE_$INDEX"

      - name: Push changes
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: git push origin master
